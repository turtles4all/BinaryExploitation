
got_hax:     file format elf32-i386


Disassembly of section .init:

08048394 <_init>:
 8048394:	53                   	push   %ebx
 8048395:	83 ec 08             	sub    $0x8,%esp
 8048398:	e8 03 01 00 00       	call   80484a0 <__x86.get_pc_thunk.bx>
 804839d:	81 c3 03 17 00 00    	add    $0x1703,%ebx
 80483a3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483a9:	85 c0                	test   %eax,%eax
 80483ab:	74 05                	je     80483b2 <_init+0x1e>
 80483ad:	e8 4e 00 00 00       	call   8048400 <__gmon_start__@plt>
 80483b2:	83 c4 08             	add    $0x8,%esp
 80483b5:	5b                   	pop    %ebx
 80483b6:	c3                   	ret    

Disassembly of section .plt:

080483c0 <.plt>:
 80483c0:	ff 35 a4 9a 04 08    	pushl  0x8049aa4
 80483c6:	ff 25 a8 9a 04 08    	jmp    *0x8049aa8
 80483cc:	00 00                	add    %al,(%eax)
	...

080483d0 <read@plt>:
 80483d0:	ff 25 ac 9a 04 08    	jmp    *0x8049aac
 80483d6:	68 00 00 00 00       	push   $0x0
 80483db:	e9 e0 ff ff ff       	jmp    80483c0 <.plt>

080483e0 <printf@plt>:
 80483e0:	ff 25 b0 9a 04 08    	jmp    *0x8049ab0
 80483e6:	68 08 00 00 00       	push   $0x8
 80483eb:	e9 d0 ff ff ff       	jmp    80483c0 <.plt>

080483f0 <puts@plt>:
 80483f0:	ff 25 b4 9a 04 08    	jmp    *0x8049ab4
 80483f6:	68 10 00 00 00       	push   $0x10
 80483fb:	e9 c0 ff ff ff       	jmp    80483c0 <.plt>

08048400 <__gmon_start__@plt>:
 8048400:	ff 25 b8 9a 04 08    	jmp    *0x8049ab8
 8048406:	68 18 00 00 00       	push   $0x18
 804840b:	e9 b0 ff ff ff       	jmp    80483c0 <.plt>

08048410 <exit@plt>:
 8048410:	ff 25 bc 9a 04 08    	jmp    *0x8049abc
 8048416:	68 20 00 00 00       	push   $0x20
 804841b:	e9 a0 ff ff ff       	jmp    80483c0 <.plt>

08048420 <open@plt>:
 8048420:	ff 25 c0 9a 04 08    	jmp    *0x8049ac0
 8048426:	68 28 00 00 00       	push   $0x28
 804842b:	e9 90 ff ff ff       	jmp    80483c0 <.plt>

08048430 <__libc_start_main@plt>:
 8048430:	ff 25 c4 9a 04 08    	jmp    *0x8049ac4
 8048436:	68 30 00 00 00       	push   $0x30
 804843b:	e9 80 ff ff ff       	jmp    80483c0 <.plt>

08048440 <strncpy@plt>:
 8048440:	ff 25 c8 9a 04 08    	jmp    *0x8049ac8
 8048446:	68 38 00 00 00       	push   $0x38
 804844b:	e9 70 ff ff ff       	jmp    80483c0 <.plt>

08048450 <__isoc99_scanf@plt>:
 8048450:	ff 25 cc 9a 04 08    	jmp    *0x8049acc
 8048456:	68 40 00 00 00       	push   $0x40
 804845b:	e9 60 ff ff ff       	jmp    80483c0 <.plt>

08048460 <close@plt>:
 8048460:	ff 25 d0 9a 04 08    	jmp    *0x8049ad0
 8048466:	68 48 00 00 00       	push   $0x48
 804846b:	e9 50 ff ff ff       	jmp    80483c0 <.plt>

Disassembly of section .text:

08048470 <_start>:
 8048470:	31 ed                	xor    %ebp,%ebp
 8048472:	5e                   	pop    %esi
 8048473:	89 e1                	mov    %esp,%ecx
 8048475:	83 e4 f0             	and    $0xfffffff0,%esp
 8048478:	50                   	push   %eax
 8048479:	54                   	push   %esp
 804847a:	52                   	push   %edx
 804847b:	68 80 87 04 08       	push   $0x8048780
 8048480:	68 10 87 04 08       	push   $0x8048710
 8048485:	51                   	push   %ecx
 8048486:	56                   	push   %esi
 8048487:	68 15 86 04 08       	push   $0x8048615
 804848c:	e8 9f ff ff ff       	call   8048430 <__libc_start_main@plt>
 8048491:	f4                   	hlt    
 8048492:	66 90                	xchg   %ax,%ax
 8048494:	66 90                	xchg   %ax,%ax
 8048496:	66 90                	xchg   %ax,%ax
 8048498:	66 90                	xchg   %ax,%ax
 804849a:	66 90                	xchg   %ax,%ax
 804849c:	66 90                	xchg   %ax,%ax
 804849e:	66 90                	xchg   %ax,%ax

080484a0 <__x86.get_pc_thunk.bx>:
 80484a0:	8b 1c 24             	mov    (%esp),%ebx
 80484a3:	c3                   	ret    
 80484a4:	66 90                	xchg   %ax,%ax
 80484a6:	66 90                	xchg   %ax,%ax
 80484a8:	66 90                	xchg   %ax,%ax
 80484aa:	66 90                	xchg   %ax,%ax
 80484ac:	66 90                	xchg   %ax,%ax
 80484ae:	66 90                	xchg   %ax,%ax

080484b0 <deregister_tm_clones>:
 80484b0:	b8 df 9a 04 08       	mov    $0x8049adf,%eax
 80484b5:	2d dc 9a 04 08       	sub    $0x8049adc,%eax
 80484ba:	83 f8 06             	cmp    $0x6,%eax
 80484bd:	76 1a                	jbe    80484d9 <deregister_tm_clones+0x29>
 80484bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80484c4:	85 c0                	test   %eax,%eax
 80484c6:	74 11                	je     80484d9 <deregister_tm_clones+0x29>
 80484c8:	55                   	push   %ebp
 80484c9:	89 e5                	mov    %esp,%ebp
 80484cb:	83 ec 14             	sub    $0x14,%esp
 80484ce:	68 dc 9a 04 08       	push   $0x8049adc
 80484d3:	ff d0                	call   *%eax
 80484d5:	83 c4 10             	add    $0x10,%esp
 80484d8:	c9                   	leave  
 80484d9:	f3 c3                	repz ret 
 80484db:	90                   	nop
 80484dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080484e0 <register_tm_clones>:
 80484e0:	b8 dc 9a 04 08       	mov    $0x8049adc,%eax
 80484e5:	2d dc 9a 04 08       	sub    $0x8049adc,%eax
 80484ea:	c1 f8 02             	sar    $0x2,%eax
 80484ed:	89 c2                	mov    %eax,%edx
 80484ef:	c1 ea 1f             	shr    $0x1f,%edx
 80484f2:	01 d0                	add    %edx,%eax
 80484f4:	d1 f8                	sar    %eax
 80484f6:	74 1b                	je     8048513 <register_tm_clones+0x33>
 80484f8:	ba 00 00 00 00       	mov    $0x0,%edx
 80484fd:	85 d2                	test   %edx,%edx
 80484ff:	74 12                	je     8048513 <register_tm_clones+0x33>
 8048501:	55                   	push   %ebp
 8048502:	89 e5                	mov    %esp,%ebp
 8048504:	83 ec 10             	sub    $0x10,%esp
 8048507:	50                   	push   %eax
 8048508:	68 dc 9a 04 08       	push   $0x8049adc
 804850d:	ff d2                	call   *%edx
 804850f:	83 c4 10             	add    $0x10,%esp
 8048512:	c9                   	leave  
 8048513:	f3 c3                	repz ret 
 8048515:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048519:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048520 <__do_global_dtors_aux>:
 8048520:	80 3d e0 9a 04 08 00 	cmpb   $0x0,0x8049ae0
 8048527:	75 13                	jne    804853c <__do_global_dtors_aux+0x1c>
 8048529:	55                   	push   %ebp
 804852a:	89 e5                	mov    %esp,%ebp
 804852c:	83 ec 08             	sub    $0x8,%esp
 804852f:	e8 7c ff ff ff       	call   80484b0 <deregister_tm_clones>
 8048534:	c6 05 e0 9a 04 08 01 	movb   $0x1,0x8049ae0
 804853b:	c9                   	leave  
 804853c:	f3 c3                	repz ret 
 804853e:	66 90                	xchg   %ax,%ax

08048540 <frame_dummy>:
 8048540:	b8 b0 99 04 08       	mov    $0x80499b0,%eax
 8048545:	8b 10                	mov    (%eax),%edx
 8048547:	85 d2                	test   %edx,%edx
 8048549:	75 05                	jne    8048550 <frame_dummy+0x10>
 804854b:	eb 93                	jmp    80484e0 <register_tm_clones>
 804854d:	8d 76 00             	lea    0x0(%esi),%esi
 8048550:	ba 00 00 00 00       	mov    $0x0,%edx
 8048555:	85 d2                	test   %edx,%edx
 8048557:	74 f2                	je     804854b <frame_dummy+0xb>
 8048559:	55                   	push   %ebp
 804855a:	89 e5                	mov    %esp,%ebp
 804855c:	83 ec 14             	sub    $0x14,%esp
 804855f:	50                   	push   %eax
 8048560:	ff d2                	call   *%edx
 8048562:	83 c4 10             	add    $0x10,%esp
 8048565:	c9                   	leave  
 8048566:	e9 75 ff ff ff       	jmp    80484e0 <register_tm_clones>

0804856b <get_your_flag>:
 804856b:	55                   	push   %ebp
 804856c:	89 e5                	mov    %esp,%ebp
 804856e:	83 ec 18             	sub    $0x18,%esp
 8048571:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048578:	83 ec 08             	sub    $0x8,%esp
 804857b:	6a 00                	push   $0x0
 804857d:	68 a0 87 04 08       	push   $0x80487a0
 8048582:	e8 99 fe ff ff       	call   8048420 <open@plt>
 8048587:	83 c4 10             	add    $0x10,%esp
 804858a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804858d:	83 ec 04             	sub    $0x4,%esp
 8048590:	6a 20                	push   $0x20
 8048592:	68 00 9b 04 08       	push   $0x8049b00
 8048597:	ff 75 f0             	pushl  -0x10(%ebp)
 804859a:	e8 31 fe ff ff       	call   80483d0 <read@plt>
 804859f:	83 c4 10             	add    $0x10,%esp
 80485a2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80485a5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 80485a9:	75 0a                	jne    80485b5 <get_your_flag+0x4a>
 80485ab:	83 ec 0c             	sub    $0xc,%esp
 80485ae:	6a 01                	push   $0x1
 80485b0:	e8 5b fe ff ff       	call   8048410 <exit@plt>
 80485b5:	eb 2b                	jmp    80485e2 <get_your_flag+0x77>
 80485b7:	b8 20 00 00 00       	mov    $0x20,%eax
 80485bc:	2b 45 f4             	sub    -0xc(%ebp),%eax
 80485bf:	83 ec 04             	sub    $0x4,%esp
 80485c2:	50                   	push   %eax
 80485c3:	68 00 9b 04 08       	push   $0x8049b00
 80485c8:	ff 75 f0             	pushl  -0x10(%ebp)
 80485cb:	e8 00 fe ff ff       	call   80483d0 <read@plt>
 80485d0:	83 c4 10             	add    $0x10,%esp
 80485d3:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80485d6:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
 80485da:	74 06                	je     80485e2 <get_your_flag+0x77>
 80485dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80485df:	01 45 f4             	add    %eax,-0xc(%ebp)
 80485e2:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)
 80485e6:	76 cf                	jbe    80485b7 <get_your_flag+0x4c>
 80485e8:	83 ec 0c             	sub    $0xc,%esp
 80485eb:	ff 75 f0             	pushl  -0x10(%ebp)
 80485ee:	e8 6d fe ff ff       	call   8048460 <close@plt>
 80485f3:	83 c4 10             	add    $0x10,%esp
 80485f6:	c6 05 20 9b 04 08 00 	movb   $0x0,0x8049b20
 80485fd:	83 ec 08             	sub    $0x8,%esp
 8048600:	68 00 9b 04 08       	push   $0x8049b00
 8048605:	68 a6 87 04 08       	push   $0x80487a6
 804860a:	e8 d1 fd ff ff       	call   80483e0 <printf@plt>
 804860f:	83 c4 10             	add    $0x10,%esp
 8048612:	90                   	nop
 8048613:	c9                   	leave  
 8048614:	c3                   	ret    

08048615 <main>:
 8048615:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048619:	83 e4 f0             	and    $0xfffffff0,%esp
 804861c:	ff 71 fc             	pushl  -0x4(%ecx)
 804861f:	55                   	push   %ebp
 8048620:	89 e5                	mov    %esp,%ebp
 8048622:	53                   	push   %ebx
 8048623:	51                   	push   %ecx
 8048624:	83 ec 30             	sub    $0x30,%esp
 8048627:	89 cb                	mov    %ecx,%ebx
 8048629:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 8048630:	83 3b 02             	cmpl   $0x2,(%ebx)
 8048633:	74 1a                	je     804864f <main+0x3a>
 8048635:	83 ec 0c             	sub    $0xc,%esp
 8048638:	68 c4 87 04 08       	push   $0x80487c4
 804863d:	e8 ae fd ff ff       	call   80483f0 <puts@plt>
 8048642:	83 c4 10             	add    $0x10,%esp
 8048645:	b8 00 00 00 00       	mov    $0x0,%eax
 804864a:	e9 ac 00 00 00       	jmp    80486fb <main+0xe6>
 804864f:	83 ec 0c             	sub    $0xc,%esp
 8048652:	68 dc 87 04 08       	push   $0x80487dc
 8048657:	e8 94 fd ff ff       	call   80483f0 <puts@plt>
 804865c:	83 c4 10             	add    $0x10,%esp
 804865f:	83 ec 08             	sub    $0x8,%esp
 8048662:	8d 45 cc             	lea    -0x34(%ebp),%eax
 8048665:	50                   	push   %eax
 8048666:	68 0b 88 04 08       	push   $0x804880b
 804866b:	e8 e0 fd ff ff       	call   8048450 <__isoc99_scanf@plt>
 8048670:	83 c4 10             	add    $0x10,%esp
 8048673:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8048676:	83 f8 0a             	cmp    $0xa,%eax
 8048679:	77 07                	ja     8048682 <main+0x6d>
 804867b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804867e:	85 c0                	test   %eax,%eax
 8048680:	75 17                	jne    8048699 <main+0x84>
 8048682:	83 ec 0c             	sub    $0xc,%esp
 8048685:	68 10 88 04 08       	push   $0x8048810
 804868a:	e8 61 fd ff ff       	call   80483f0 <puts@plt>
 804868f:	83 c4 10             	add    $0x10,%esp
 8048692:	b8 00 00 00 00       	mov    $0x0,%eax
 8048697:	eb 62                	jmp    80486fb <main+0xe6>
 8048699:	83 ec 0c             	sub    $0xc,%esp
 804869c:	68 3c 88 04 08       	push   $0x804883c
 80486a1:	e8 4a fd ff ff       	call   80483f0 <puts@plt>
 80486a6:	83 c4 10             	add    $0x10,%esp
 80486a9:	8b 43 04             	mov    0x4(%ebx),%eax
 80486ac:	83 c0 04             	add    $0x4,%eax
 80486af:	8b 00                	mov    (%eax),%eax
 80486b1:	83 ec 04             	sub    $0x4,%esp
 80486b4:	6a 27                	push   $0x27
 80486b6:	50                   	push   %eax
 80486b7:	8d 45 d0             	lea    -0x30(%ebp),%eax
 80486ba:	50                   	push   %eax
 80486bb:	e8 80 fd ff ff       	call   8048440 <strncpy@plt>
 80486c0:	83 c4 10             	add    $0x10,%esp
 80486c3:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
 80486c7:	83 ec 0c             	sub    $0xc,%esp
 80486ca:	68 75 88 04 08       	push   $0x8048875
 80486cf:	e8 0c fd ff ff       	call   80483e0 <printf@plt>
 80486d4:	83 c4 10             	add    $0x10,%esp
 80486d7:	83 ec 0c             	sub    $0xc,%esp
 80486da:	8d 45 d0             	lea    -0x30(%ebp),%eax
 80486dd:	50                   	push   %eax
 80486de:	e8 fd fc ff ff       	call   80483e0 <printf@plt>
 80486e3:	83 c4 10             	add    $0x10,%esp
 80486e6:	83 ec 0c             	sub    $0xc,%esp
 80486e9:	68 7e 88 04 08       	push   $0x804887e
 80486ee:	e8 fd fc ff ff       	call   80483f0 <puts@plt>
 80486f3:	83 c4 10             	add    $0x10,%esp
 80486f6:	b8 00 00 00 00       	mov    $0x0,%eax
 80486fb:	8d 65 f8             	lea    -0x8(%ebp),%esp
 80486fe:	59                   	pop    %ecx
 80486ff:	5b                   	pop    %ebx
 8048700:	5d                   	pop    %ebp
 8048701:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048704:	c3                   	ret    
 8048705:	66 90                	xchg   %ax,%ax
 8048707:	66 90                	xchg   %ax,%ax
 8048709:	66 90                	xchg   %ax,%ax
 804870b:	66 90                	xchg   %ax,%ax
 804870d:	66 90                	xchg   %ax,%ax
 804870f:	90                   	nop

08048710 <__libc_csu_init>:
 8048710:	55                   	push   %ebp
 8048711:	57                   	push   %edi
 8048712:	31 ff                	xor    %edi,%edi
 8048714:	56                   	push   %esi
 8048715:	53                   	push   %ebx
 8048716:	e8 85 fd ff ff       	call   80484a0 <__x86.get_pc_thunk.bx>
 804871b:	81 c3 85 13 00 00    	add    $0x1385,%ebx
 8048721:	83 ec 1c             	sub    $0x1c,%esp
 8048724:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048728:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804872e:	e8 61 fc ff ff       	call   8048394 <_init>
 8048733:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048739:	29 c6                	sub    %eax,%esi
 804873b:	c1 fe 02             	sar    $0x2,%esi
 804873e:	85 f6                	test   %esi,%esi
 8048740:	74 27                	je     8048769 <__libc_csu_init+0x59>
 8048742:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048748:	8b 44 24 38          	mov    0x38(%esp),%eax
 804874c:	89 2c 24             	mov    %ebp,(%esp)
 804874f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048753:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048757:	89 44 24 04          	mov    %eax,0x4(%esp)
 804875b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048762:	83 c7 01             	add    $0x1,%edi
 8048765:	39 f7                	cmp    %esi,%edi
 8048767:	75 df                	jne    8048748 <__libc_csu_init+0x38>
 8048769:	83 c4 1c             	add    $0x1c,%esp
 804876c:	5b                   	pop    %ebx
 804876d:	5e                   	pop    %esi
 804876e:	5f                   	pop    %edi
 804876f:	5d                   	pop    %ebp
 8048770:	c3                   	ret    
 8048771:	eb 0d                	jmp    8048780 <__libc_csu_fini>
 8048773:	90                   	nop
 8048774:	90                   	nop
 8048775:	90                   	nop
 8048776:	90                   	nop
 8048777:	90                   	nop
 8048778:	90                   	nop
 8048779:	90                   	nop
 804877a:	90                   	nop
 804877b:	90                   	nop
 804877c:	90                   	nop
 804877d:	90                   	nop
 804877e:	90                   	nop
 804877f:	90                   	nop

08048780 <__libc_csu_fini>:
 8048780:	f3 c3                	repz ret 

Disassembly of section .fini:

08048784 <_fini>:
 8048784:	53                   	push   %ebx
 8048785:	83 ec 08             	sub    $0x8,%esp
 8048788:	e8 13 fd ff ff       	call   80484a0 <__x86.get_pc_thunk.bx>
 804878d:	81 c3 13 13 00 00    	add    $0x1313,%ebx
 8048793:	83 c4 08             	add    $0x8,%esp
 8048796:	5b                   	pop    %ebx
 8048797:	c3                   	ret    

got_hax:     file format elf32-i386

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048134  08048134  00000134  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048148  08048148  00000148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  0804818c  0804818c  0000018c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000c0  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000087  0804826c  0804826c  0000026c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000018  080482f4  080482f4  000002f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  0804830c  0804830c  0000030c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000008  0804833c  0804833c  0000033c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000050  08048344  08048344  00000344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048394  08048394  00000394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000000b0  080483c0  080483c0  000003c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000312  08048470  08048470  00000470  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000014  08048784  08048784  00000784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       000000f8  08048798  08048798  00000798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000034  08048890  08048890  00000890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000e4  080488c4  080488c4  000008c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000004  080499a8  080499a8  000009a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000004  080499ac  080499ac  000009ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000004  080499b0  080499b0  000009b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000e8  080499b4  080499b4  000009b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000004  08049a9c  08049a9c  00000a9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000034  08049aa0  08049aa0  00000aa0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000008  08049ad4  08049ad4  00000ad4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000044  08049ae0  08049ae0  00000adc  2**5
                  ALLOC
 25 .comment      00000039  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY

got_hax:     file format elf32-i386
got_hax
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048470

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000100 memsz 0x00000100 flags r-x
  INTERP off    0x00000134 vaddr 0x08048134 paddr 0x08048134 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000009a8 memsz 0x000009a8 flags r-x
    LOAD off    0x000009a8 vaddr 0x080499a8 paddr 0x080499a8 align 2**12
         filesz 0x00000134 memsz 0x0000017c flags rw-
 DYNAMIC off    0x000009b4 vaddr 0x080499b4 paddr 0x080499b4 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000148 vaddr 0x08048148 paddr 0x08048148 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00000890 vaddr 0x08048890 paddr 0x08048890 align 2**2
         filesz 0x00000034 memsz 0x00000034 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048394
  FINI                 0x08048784
  INIT_ARRAY           0x080499a8
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x080499ac
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x0804818c
  STRTAB               0x0804826c
  SYMTAB               0x080481ac
  STRSZ                0x00000087
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x08049aa0
  PLTRELSZ             0x00000050
  PLTREL               0x00000011
  JMPREL               0x08048344
  REL                  0x0804833c
  RELSZ                0x00000008
  RELENT               0x00000008
  VERNEED              0x0804830c
  VERNEEDNUM           0x00000001
  VERSYM               0x080482f4

Version References:
  required from libc.so.6:
    0x0d696917 0x00 03 GLIBC_2.7
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048134  08048134  00000134  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048148  08048148  00000148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  0804818c  0804818c  0000018c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000c0  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000087  0804826c  0804826c  0000026c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000018  080482f4  080482f4  000002f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  0804830c  0804830c  0000030c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000008  0804833c  0804833c  0000033c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000050  08048344  08048344  00000344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048394  08048394  00000394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000000b0  080483c0  080483c0  000003c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000312  08048470  08048470  00000470  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000014  08048784  08048784  00000784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       000000f8  08048798  08048798  00000798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000034  08048890  08048890  00000890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000e4  080488c4  080488c4  000008c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000004  080499a8  080499a8  000009a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000004  080499ac  080499ac  000009ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000004  080499b0  080499b0  000009b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000e8  080499b4  080499b4  000009b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000004  08049a9c  08049a9c  00000a9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000034  08049aa0  08049aa0  00000aa0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000008  08049ad4  08049ad4  00000ad4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000044  08049ae0  08049ae0  00000adc  2**5
                  ALLOC
 25 .comment      00000039  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08048134 l    d  .interp	00000000              .interp
08048148 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048168 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
0804818c l    d  .gnu.hash	00000000              .gnu.hash
080481ac l    d  .dynsym	00000000              .dynsym
0804826c l    d  .dynstr	00000000              .dynstr
080482f4 l    d  .gnu.version	00000000              .gnu.version
0804830c l    d  .gnu.version_r	00000000              .gnu.version_r
0804833c l    d  .rel.dyn	00000000              .rel.dyn
08048344 l    d  .rel.plt	00000000              .rel.plt
08048394 l    d  .init	00000000              .init
080483c0 l    d  .plt	00000000              .plt
08048470 l    d  .text	00000000              .text
08048784 l    d  .fini	00000000              .fini
08048798 l    d  .rodata	00000000              .rodata
08048890 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
080488c4 l    d  .eh_frame	00000000              .eh_frame
080499a8 l    d  .init_array	00000000              .init_array
080499ac l    d  .fini_array	00000000              .fini_array
080499b0 l    d  .jcr	00000000              .jcr
080499b4 l    d  .dynamic	00000000              .dynamic
08049a9c l    d  .got	00000000              .got
08049aa0 l    d  .got.plt	00000000              .got.plt
08049ad4 l    d  .data	00000000              .data
08049ae0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    df *ABS*	00000000              crtstuff.c
080499b0 l     O .jcr	00000000              __JCR_LIST__
080484b0 l     F .text	00000000              deregister_tm_clones
080484e0 l     F .text	00000000              register_tm_clones
08048520 l     F .text	00000000              __do_global_dtors_aux
08049ae0 l     O .bss	00000001              completed.6279
080499ac l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048540 l     F .text	00000000              frame_dummy
080499a8 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              got_hax.c
00000000 l    df *ABS*	00000000              crtstuff.c
080489a4 l     O .eh_frame	00000000              __FRAME_END__
080499b0 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
080499ac l       .init_array	00000000              __init_array_end
080499b4 l     O .dynamic	00000000              _DYNAMIC
080499a8 l       .init_array	00000000              __init_array_start
08049aa0 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
08048780 g     F .text	00000002              __libc_csu_fini
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080484a0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
08049ad4  w      .data	00000000              data_start
00000000       F *UND*	00000000              printf@@GLIBC_2.0
08049adc g       .data	00000000              _edata
08049b00 g     O .bss	00000021              key
08048784 g     F .fini	00000000              _fini
0804856b g     F .text	000000aa              get_your_flag
08049ad4 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
08049ad8 g     O .data	00000000              .hidden __dso_handle
00000000       F *UND*	00000000              open@@GLIBC_2.0
0804879c g     O .rodata	00000004              _IO_stdin_used
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
08048710 g     F .text	00000061              __libc_csu_init
08049b24 g       .bss	00000000              _end
00000000       F *UND*	00000000              strncpy@@GLIBC_2.0
08048470 g     F .text	00000000              _start
08048798 g     O .rodata	00000004              _fp_hw
08049adc g       .bss	00000000              __bss_start
08048615 g     F .text	000000f0              main
00000000  w      *UND*	00000000              _Jv_RegisterClasses
00000000       F *UND*	00000000              __isoc99_scanf@@GLIBC_2.7
08049adc g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
08048394 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0


